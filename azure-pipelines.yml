# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  PRERELEASE_VERSION: 'pre.$(Build.BuildNumber)'

steps:
- script: dotnet clean --configuration $(buildConfiguration)
  displayName: 'dotnet clean $(buildConfiguration)'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test tests/**/*.csproj --configuration $(buildConfiguration) --no-build
  displayName: 'dotnet test $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Create Prerelease NuGet Packages'
  inputs:
    command: custom
    custom: pack
    versioningScheme: byEnvVar
    versionEnvVar: PRERELEASE_VERSION
    arguments: -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/packages --version-suffix $(PRERELEASE_VERSION) -v m --no-build
    zipAfterPublish: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/dev'))

- task: DotNetCoreCLI@2
  displayName: 'Create NuGet Packages'
  inputs:
    command: custom
    custom: pack
    arguments: -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/packages -v m --no-build
    zipAfterPublish: true
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))


- task: NuGetCommand@2
  enabled: false
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/packages/*.nupkg;!$(Build.ArtifactStagingDirectory)/packages/*.symbols.nupkg'
    nuGetFeedType: 'external'
    allowPackageConflicts: true
    publishFeedCredentials: 'NuGet.org'
  condition: succeeded()